Basic Architecture
==================

SearchHub has the purpose to optimize user generated search queries before they hit the actual search engine. 
It is realized as a simple http proxy, that provides a simple plugin system for query rewriting modules.


Modules
-------

There are several approaches of "search query optimization". Each is realized as modules for SearchHub, like the main module "SmartQuery_".

By default SearchHub combines the installed modules to provide the wished behaviour.

It is also possible to integrate the single modules directly into a system using native Java Code, there for read the according module documentation, especially the according integration section.


System Integration
------------------

At the moment SearchHub is provisioned as an OSGI application that runs inside `Apache Karaf`_, but other provisioning formats are planed, 
e.g. as a standalone Java application that can be wrapped into a docker container.

Normaly all components of a big web application system are connected by http. 
A typical setup would be for example a loadbalancer in front of a caching proxy in front of a shop system which uses a search engine over it's restful api.
SearchHub is designed to become an additional component in this chain. 
In the best case it should be place in front of the cache and only receive search traffic from the loadbalancer. 

Such a setup has the following advantages:

1. SearchHub will improve cache hit ratio when using the SmartQuery_ module
2. SearchHub won't get unnecessary http traffic that would be passed trough anyway, just with an additional latency overhead
3. SearchHub becomes a less critical component, when only partial traffic is routed trough it


.. _SmartQuery: modules/smartquery.html
.. _Apache Karaf: http://karaf.apache.org/